name: Deploy workflow
on: push

jobs:
  test-base:
    name: Run Base Tests
    if: ! startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install Dependencies
        run: |
          pip install pytest
          pip install -e .
      - name: Run Tests
        run: pytest tests/base_test.py
  test-full:
    name: Run Tests on Multiple Python Versions
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - tag-version
    strategy:
      matrix:
        python: ["3.8", "3.13"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set Up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Install Dependencies
        run: |
          pip install pytest
          pip install -e .
      - name: Run Tests
        run: pytest

  build:
    name: Build Python Distribution
    runs-on: ubuntu-latest
    needs:
      - tag-version

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Set Up Python Environment
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install Build Tool
        run: >-
          python3 -m
          pip install
          build
          --user
      - name: Build Distribution Packages
        run: python3 -m build
      - name: Upload Distribution Packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  tag-version:
    name: Tag Version on setup.py Change
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          fetch-depth: 0

      - name: Extract Version from setup.py
        id: get_version
        run: echo "VERSION=$(python setup.py --version)" >> $GITHUB_ENV

      - name: Check Latest Tag
        id: get_latest_tag
        run: echo "LATEST_TAG=$(git describe --tags --abbrev=0 || echo '')" >> $GITHUB_ENV

      - name: Compare Versions & Tag If New
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "$VERSION" != "$LATEST_TAG" ]; then
            echo "New version detected: $VERSION ($LATEST_TAG)"
            git config --global user.name "github-actions"
            git config --global user.email "github-actions@github.com"
            git tag "$VERSION"
            git push origin "$VERSION"
            exit 1
          else
            echo "No new version detected."
          fi

  publish-to-pypi:
    name: Publish to PyPI on Tag Push
    needs:
      - build
      - test-full
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/flametracker
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download Distribution Packages
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Create GitHub Release with Distribution Packages
    needs:
      - build
      - test-full
    runs-on: ubuntu-latest

    permissions:
      contents: write # IMPORTANT: mandatory for making GitHub Releases
      id-token: write # IMPORTANT: mandatory for sigstore

    steps:
      - name: Download Distribution Packages
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Sign Packages with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          "$GITHUB_REF_NAME"
          --repo "$GITHUB_REPOSITORY"
          --notes ""
      - name: Upload Packages and Signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # Upload to GitHub Release using the `gh` CLI.
        # `dist/` contains the built packages, and the
        # sigstore-produced signatures and certificates.
        run: >-
          gh release upload
          "$GITHUB_REF_NAME" dist/**
          --repo "$GITHUB_REPOSITORY"

  publish-to-testpypi:
    name: Publish to TestPyPI
    needs:
      - build
      - test-base
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/flametracker

    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download Distribution Packages
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
