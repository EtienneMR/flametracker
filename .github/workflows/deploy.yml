name: Deploy workflow
on:
  - push
  - pull_request
  - workflow_dispatch

permissions:
  contents: write

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      test: ${{ steps.changes.outputs.test }}
      build: ${{ steps.changes.outputs.build }}
      docs: ${{ steps.changes.outputs.docs }}
      push: ${{ github.event_name == 'push' }}
      main: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            test:
              - 'tests/**'
              - 'flametracker/**'
            build:
              - 'flametracker/**'
            docs:
              - 'docs/**'

  test:
    name: Run Tests
    needs: changes
    if: needs.changes.outputs.test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install Dependencies
        run: |
          pip install pytest
          pip install -e .
      - name: Run Tests
        run: pytest

  build:
    name: Build Python Distribution
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.push && needs.changes.outputs.build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set Up Python Environment
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install Build Tool
        run: >-
          python3 -m
          pip install
          build
          --user
      - name: Build Distribution Packages
        run: python3 -m build
      - name: Upload Distribution Packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-pypi:
    name: Publish to PyPI on Tag Push
    if: needs.changes.outputs.main
    needs:
      - build
      - test
      - changes
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/flametracker
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download Distribution Packages
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  publish-to-testpypi:
    name: Publish to TestPyPI
    if: needs.changes.outputs.main
    needs:
      - build
      - test
      - changes
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/flametracker

    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download Distribution Packages
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  docs:
    runs-on: ubuntu-latest
    if: needs.changes.outputs.docs && needs.changes.outputs.push && needs.changes.outputs.main
    needs: changes
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set Up Python Environment
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          pip install sphinx pydata_sphinx_theme
      - name: Install flametracker
        run: |
          pip install -e .
      - name: Sphinx build
        run: |
          sphinx-build docs/source/ docs/build/
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          publish_branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/build/
          force_orphan: true
